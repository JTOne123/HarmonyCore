;;**********************************************************************
;;
;; Title:       SynergyDecimalDateConverter.dbl
;;
;; Type:        Class
;;
;; Description: Data Converter : convert between a synergy decimal and a DateTime
;;
;; Copyright (c) 2012, Synergex International, Inc. All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************
import System
import System.Collections.Generic
import System.Text
import Harmony.Core
import Harmony.Core.Utility

namespace Harmony.Core.Converters
	
	;;; <summary>
	;;;  The SynergyDecimalDateConverter class is designed to convert a Synergy Decimal data type to a <a href="https://docs.microsoft.com/en-us/dotnet/standard/clr" target="_blank">Command Language Runtime</a> compliant
	;;;  type.  The Synergy Decimal field is converted to a DateTime type.  This class is used within the XAML Data Binding property
	;;;  and allows the underlying $$HarmonyCore Data Object$$ to expose Synergy Decimal data 
	;;;  types.  The Data Bindings work two-way and the SynergyDecimalDateConverter class converts DateTime types to Synergy Decimal types
	;;;  when the XAML is setting the data bound value
	;;; </summary>
	public static class SynergyDecimalDateConverter
		
		public class LiteralFormatter implements ILiteralFormatter

			public FormatParameter, @string

			public method LiteralFormatter
				formatParameter, @string
			proc
				this.FormatParameter = formatParameter
			endmethod

			public virtual method FormatLiteral, @string
				inputLiteral, @string 
				endparams
			proc
				mreturn %string(SynergyDecimalDateConverter.ConvertBack(DateTime.Parse(inputLiteral), ^null, FormatParameter, ^null))
			endmethod

		endclass



		;;; <summary>
		;;;	Convertion from a Synergy Decimal type to a <a href="https://docs.microsoft.com/en-us/dotnet/standard/clr" target="_blank">Command Language Runtime</a> DateTime type.
		;;; </summary>
		;;; <param name="value">The inbound value to convert.</param>
		;;; <param name="targetType">The datatype type of the target.</param>
		;;; <param name="parameter">Any addiotnal binding parameters passed in, as specified by the ConverterParameter property.</param>
		;;; <param name="culture">An instance of the System.Globalization.CultureInfo class that identifies the culture of the client _UI_.</param>
		;;; <remarks>
		;;; The Convert method is utilised by the _WPF_ framework when conversion of a databound source is required.  The SynergyDecimalDateConverter
		;;; Convert method marshals the data from a Synergy Decimal type to a native <a href="https://docs.microsoft.com/en-us/dotnet/standard/clr" target="_blank">Command Language Runtime</a> Dateime type.
		;;; The ConversionParameter value can be assigned the following:
		;;;		YYYYMMDD - standard Synergy date format.
		;;;		YYMMDD - reversed d6 date.
		;;;		YYJJJ - this will convert a decimal julian date type.
		;;;		DDMMYY - accepts and converts a DDMMYY date.
		;;;		DDMMYYYY - accepts and converts a DDMMYYYY date.
		;;;		MMDDYY - accepts and converts a MMDDYY date.
		;;;		MMDDYYYY - accepts and converts a MMDDYYYY date.
		;;; _NEWLINE_
		;;; Convertion parameters can be combined using the '|' character, for example JULIANDATE|NODEFAULTODAY
		;;; </remarks>
		public static method Convert	,System.DateTime
			value				,d
			targetType			,@Type
			parameter			,@Object
			culture				,@System.Globalization.CultureInfo
			endparams
		proc
			data formatString = "YYYYMMDD"
			;;do we have a parameter??
			if (parameter != ^null)
			begin
				formatString = parameter.ToString()
			end

			mreturn %DecToDateTime((d)value, formatString)
		endmethod
		
		;;; <summary>
		;;;	Convertion from a <a href="https://docs.microsoft.com/en-us/dotnet/standard/clr" target="_blank">Command Language Runtime</a> DateTime type to s Synergy Decimal type.
		;;; </summary>
		;;; <param name="value">The inbound value to convert.</param>
		;;; <param name="targetType">The datatype type of the target.</param>
		;;; <param name="parameter">Any addiotnal binding parameters passed in, as specified by the ConverterParameter property.</param>
		;;; <param name="culture">An instance of the System.Globalization.CultureInfo class that identifies the culture of the client _UI_.</param>
		;;; <remarks>
		;;; The Convert method is utilised by the _WPF_ framework when conversion of a databound source is required.  The SynergyDecimalDateConverter
		;;; ConvertBack method marshals the data from a native <a href="https://docs.microsoft.com/en-us/dotnet/standard/clr" target="_blank">Command Language Runtime</a> DateTime type to a Synergy Decimal type
		;;; The ConversionParameter value can be assigned the following:
		;;;		YYYYMMDD - standard Synergy date format.
		;;;		YYMMDD - reversed d6 date.
		;;;		YYJJJ - this will convert a decimal YYJJJ julian date type.
		;;;		DDMMYY - accepts and converts a DDMMYY date.
		;;;		DDMMYYYY - accepts and converts a DDMMYYYY date.
		;;;		MMDDYY - accepts and converts a DDMMYY date.
		;;;		MMDDYYYY - accepts and converts a DDMMYYYY date.
		;;; </remarks>
		public static method ConvertBack	,d
			value				,@Object
			targetType			,@Type
			parameter			,@Object
			culture				,@System.Globalization.CultureInfo
			endparams
		proc
			if (value == ^null)
			begin
				data dateLayout, d8, 0
				mreturn dateLayout
			end
			
			data formatString = "YYYYMMDD"
			;;do we have a parameter??
			if (parameter != ^null)
			begin
				formatString = parameter.ToString()
			end

			mreturn %DateTimeToDec((DateTime)value, formatString)

		endmethod
	endclass
	
endnamespace

