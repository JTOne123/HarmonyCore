;;*****************************************************************************
;;
;; Title:       IntegertestsMetaData.dbl
;;
;; Description: Defines meta data associated with a Integertests model.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.Text
import Harmony.Core
import Harmony.Core.Converters

namespace TraditionalBridge.Models

    ;;; <summary>
    ;;; Global structure representing a Integertests record.
    ;;; </summary>
    .include "INTEGERTESTS" repository, public structure="strIntegertests", end

    ;;; <summary>
    ;;; Exposes metadata relating to the Integertests model class.
    ;;; </summary>
    public partial class IntegertestsMetadata extends DataObjectMetadataBase

        ;; Define custom property formatters

        ;;; <summary>
        ;;; Constructs an new IntegertestsMetadata object.
        ;;; </summary>
        public method IntegertestsMetadata
        proc
            ;; Define structure name and size
            RPSStructureName = "INTEGERTESTS"
            RPSStructureSize = ^size(strIntegertests)

            ;; Define fields
            AddFieldInfo("IntI1", "INTEGER", 1, 1, 0, false)
            AddFieldInfo("IntI2", "INTEGER", 2, 2, 0, false)
            AddFieldInfo("IntI4", "INTEGER", 4, 4, 0, false)
            AddFieldInfo("IntI8", "LONG", 8, 8, 0, false)

            ;;If we have an InitializeCustomFields method then call it.
            InitializeCustomFields()

        endmethod

        ;;; <summary>
        ;;; Returns a new Integertests object containing data from a record and a GRFA.
        ;;; </summary>
        ;;; <param name="dataArea">The record containing the data for the new Integertests object.</param>
        ;;; <param name="grfa">The GRFA associated with the current state of the data.</param>
        ;;; <returns></returns>
        public override method MakeNew, @DataObjectBase
            required in dataArea, a
            required in grfa, a
        proc
            mreturn new Integertests(dataArea, grfa)
        endmethod

        ;;; <summary>
        ;;; Returns a new Integertests object containing data from a record and a GRFA.
        ;;; </summary>
        ;;; <param name="dataArea">The record containing the data for the new Integertests object.</param>
        ;;; <param name="grfa">The GRFA associated with the current state of the data.</param>
        ;;; <param name="joinedObjects">Data to allow the related data properties to be populated.</param>
        ;;; <returns></returns>
        public override method MakeNew, @DataObjectBase
            required in dataArea, a
            required in grfa, a
            required in joinedObjects, [#]KeyValuePair<String, Object>
        proc
            data newIntegertests = new Integertests(dataArea, grfa)
            mreturn newIntegertests

        endmethod

        ;;; <summary>
        ;;; Formats a literal value for a key lookup.
        ;;; </summary>
        ;;; <param name="keyNumber">Key number.</param>
        ;;; <param name="parts">Dictionary containing key segment names and values.</param>
        ;;; <returns></returns>
        public override method FormatKeyLiteral, a
            required in keyNumber, int
            required in parts, @Dictionary<String, Object>
            endparams
        proc

            throw new ApplicationException(String.Format("Invalid key number {0} encountered in IntegertestsMetadata.FormatKeyLiteral",keyNumber))

        endmethod

        ;;;<summary>
        ;;; Provide a partial method to allow for initialization of custom fields.
        ;;;</summary>
        private partial method InitializeCustomFields, void

        endmethod

    endclass

endnamespace
