;;*****************************************************************************
;;
;; Title:       StruD.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure STRU_D.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import System.Text
import Harmony.Core
import Harmony.Core.Converters

namespace TraditionalBridge.Models

    public partial class StruD extends DataObjectBase

        ;;make the record available and a copy
        private mSynergyData, strStruD
        private mOriginalSynergyData, strStruD

        private static sMetadata, @StruDMetadata

.region "Constructors"

        static method StruD
        proc
            sMetadata = new StruDMetadata()
            DataObjectMetadataBase.MetadataLookup.TryAdd(^typeof(StruD), sMetadata)
        endmethod

        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method StruD
            parent()
        proc
            init mSynergyData, mOriginalSynergyData
        endmethod

        ;;; <summary>
        ;;;  Alternate Constructor, accepts the structured data
        ;;; </summary>
        public method StruD
            required in inData, a
            required in inGrfa, a
            parent()
        proc
            mSynergyData = mOriginalSynergyData = inData
            mGlobalRFA = inGrfa
        endmethod

.endregion

.region "Attributes of this entity"

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property Alpha10, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.alpha_10, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.alpha_10 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property Alpharay10x101, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.alpharay_10x10[1], ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.alpharay_10x10[1] = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property Alpharay10x102, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.alpharay_10x10[2], ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.alpharay_10x10[2] = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property Alpharay10x103, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.alpharay_10x10[3], ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.alpharay_10x10[3] = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property Alpharay10x104, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.alpharay_10x10[4], ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.alpharay_10x10[4] = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property Alpharay10x105, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.alpharay_10x10[5], ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.alpharay_10x10[5] = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property Alpharay10x106, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.alpharay_10x10[6], ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.alpharay_10x10[6] = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property Alpharay10x107, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.alpharay_10x10[7], ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.alpharay_10x10[7] = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property Alpharay10x108, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.alpharay_10x10[8], ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.alpharay_10x10[8] = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property Alpharay10x109, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.alpharay_10x10[9], ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.alpharay_10x10[9] = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property Alpharay10x1010, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.alpharay_10x10[10], ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.alpharay_10x10[10] = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999, ErrorMessage=" must be between 0 and 99999. ")}
        public property Decray5x61, int
            method get
            proc
                mreturn (int)mSynergyData.decray_5x6[1]
            endmethod
            method set
            proc
                mSynergyData.decray_5x6[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999, ErrorMessage=" must be between 0 and 99999. ")}
        public property Decray5x62, int
            method get
            proc
                mreturn (int)mSynergyData.decray_5x6[2]
            endmethod
            method set
            proc
                mSynergyData.decray_5x6[2] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999, ErrorMessage=" must be between 0 and 99999. ")}
        public property Decray5x63, int
            method get
            proc
                mreturn (int)mSynergyData.decray_5x6[3]
            endmethod
            method set
            proc
                mSynergyData.decray_5x6[3] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999, ErrorMessage=" must be between 0 and 99999. ")}
        public property Decray5x64, int
            method get
            proc
                mreturn (int)mSynergyData.decray_5x6[4]
            endmethod
            method set
            proc
                mSynergyData.decray_5x6[4] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999, ErrorMessage=" must be between 0 and 99999. ")}
        public property Decray5x65, int
            method get
            proc
                mreturn (int)mSynergyData.decray_5x6[5]
            endmethod
            method set
            proc
                mSynergyData.decray_5x6[5] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999, ErrorMessage=" must be between 0 and 99999. ")}
        public property Decray5x66, int
            method get
            proc
                mreturn (int)mSynergyData.decray_5x6[6]
            endmethod
            method set
            proc
                mSynergyData.decray_5x6[6] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999.99, ErrorMessage=" must be between 0 and 999.99. ")}
        public property Idecray52x41, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.idecray_52x4[1], ^null, "DECIMALPLACES#2", ^null)
            endmethod
            method set
            proc
                mSynergyData.idecray_52x4[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999.99, ErrorMessage=" must be between 0 and 999.99. ")}
        public property Idecray52x42, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.idecray_52x4[2], ^null, "DECIMALPLACES#2", ^null)
            endmethod
            method set
            proc
                mSynergyData.idecray_52x4[2] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999.99, ErrorMessage=" must be between 0 and 999.99. ")}
        public property Idecray52x43, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.idecray_52x4[3], ^null, "DECIMALPLACES#2", ^null)
            endmethod
            method set
            proc
                mSynergyData.idecray_52x4[3] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999.99, ErrorMessage=" must be between 0 and 999.99. ")}
        public property Idecray52x44, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.idecray_52x4[4], ^null, "DECIMALPLACES#2", ^null)
            endmethod
            method set
            proc
                mSynergyData.idecray_52x4[4] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        public property Intray2x81, int
            method get
            proc
                mreturn (int)mSynergyData.intray_2x8[1]
            endmethod
            method set
            proc
                mSynergyData.intray_2x8[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        public property Intray2x82, int
            method get
            proc
                mreturn (int)mSynergyData.intray_2x8[2]
            endmethod
            method set
            proc
                mSynergyData.intray_2x8[2] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        public property Intray2x83, int
            method get
            proc
                mreturn (int)mSynergyData.intray_2x8[3]
            endmethod
            method set
            proc
                mSynergyData.intray_2x8[3] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        public property Intray2x84, int
            method get
            proc
                mreturn (int)mSynergyData.intray_2x8[4]
            endmethod
            method set
            proc
                mSynergyData.intray_2x8[4] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        public property Intray2x85, int
            method get
            proc
                mreturn (int)mSynergyData.intray_2x8[5]
            endmethod
            method set
            proc
                mSynergyData.intray_2x8[5] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        public property Intray2x86, int
            method get
            proc
                mreturn (int)mSynergyData.intray_2x8[6]
            endmethod
            method set
            proc
                mSynergyData.intray_2x8[6] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        public property Intray2x87, int
            method get
            proc
                mreturn (int)mSynergyData.intray_2x8[7]
            endmethod
            method set
            proc
                mSynergyData.intray_2x8[7] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        public property Intray2x88, int
            method get
            proc
                mreturn (int)mSynergyData.intray_2x8[8]
            endmethod
            method set
            proc
                mSynergyData.intray_2x8[8] = value
            endmethod
        endproperty

.endregion

.region "Other attributes"

        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
        public override property SynergyRecord, a
            method get
            proc
                mreturn mSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Expose the complete original synergy record
        ;;; </summary>
        public override property OriginalSynergyRecord, a
            method get
            proc
                mreturn mOriginalSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Metadata describing the public field properties
        ;;; </summary>
        public override property Metadata, @DataObjectMetadataBase
            method get
            proc
                mreturn sMetadata
            endmethod
        endproperty

.endregion

.region "Public methods"

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalSynergyRecord, void
            targetMethod, @AlphaAction
        proc
            targetMethod(mSynergyData, mGlobalRFA)
        endmethod

        ;;; <summary>
        ;;; Allow the host to validate all fields. Each field will fire the validation method.
        ;;; </summary>
        public override method InitialValidateData, void
        proc
        endmethod

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalGetValues, [#]@object
        proc
            ;;TODO: This should be returning boxed values for each of our fields
            mreturn new Object[29]
        endmethod

.endregion
endclass

endnamespace
