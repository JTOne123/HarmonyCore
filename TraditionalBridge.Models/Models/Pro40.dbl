;;*****************************************************************************
;;
;; Title:       Pro40.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure PRO_40.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import System.Text
import Harmony.Core
import Harmony.Core.Converters

namespace TraditionalBridge.Models

    public partial class Pro40 extends DataObjectBase

        ;;make the record available and a copy
        private mSynergyData, strPro40
        private mOriginalSynergyData, strPro40

        private static sMetadata, @Pro40Metadata

.region "Constructors"

        static method Pro40
        proc
            sMetadata = new Pro40Metadata()
            DataObjectMetadataBase.MetadataLookup.TryAdd(^typeof(Pro40), sMetadata)
        endmethod

        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method Pro40
            parent()
        proc
            init mSynergyData, mOriginalSynergyData
        endmethod

        ;;; <summary>
        ;;;  Alternate Constructor, accepts the structured data
        ;;; </summary>
        public method Pro40
            required in inData, a
            required in inGrfa, a
            parent()
        proc
            mSynergyData = mOriginalSynergyData = inData
            mGlobalRFA = inGrfa
        endmethod

.endregion

.region "Attributes of this entity"

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A1, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a1, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a1 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A2, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a2, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a2 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A3, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a3, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a3 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A4, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a4, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a4 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A5, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a5, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a5 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A6, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a6, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a6 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A7, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a7, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a7 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A8, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a8, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a8 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A9, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a9, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a9 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A10, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a10, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a10 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A11, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a11, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a11 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A12, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a12, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a12 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A13, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a13, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a13 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A14, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a14, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a14 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A15, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a15, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a15 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A16, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a16, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a16 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A17, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a17, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a17 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A18, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a18, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a18 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A19, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a19, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a19 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property A20, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a20, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a20 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

.endregion

.region "Other attributes"

        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
        public override property SynergyRecord, a
            method get
            proc
                mreturn mSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Expose the complete original synergy record
        ;;; </summary>
        public override property OriginalSynergyRecord, a
            method get
            proc
                mreturn mOriginalSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Metadata describing the public field properties
        ;;; </summary>
        public override property Metadata, @DataObjectMetadataBase
            method get
            proc
                mreturn sMetadata
            endmethod
        endproperty

.endregion

.region "Public methods"

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalSynergyRecord, void
            targetMethod, @AlphaAction
        proc
            targetMethod(mSynergyData, mGlobalRFA)
        endmethod

        ;;; <summary>
        ;;; Allow the host to validate all fields. Each field will fire the validation method.
        ;;; </summary>
        public override method InitialValidateData, void
        proc
        endmethod

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalGetValues, [#]@object
        proc
            ;;TODO: This should be returning boxed values for each of our fields
            mreturn new Object[20]
        endmethod

.endregion
endclass

endnamespace
