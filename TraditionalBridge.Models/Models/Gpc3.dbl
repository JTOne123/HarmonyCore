;;*****************************************************************************
;;
;; Title:       Gpc3.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure GPC3.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import System.Text
import Harmony.Core
import Harmony.Core.Converters

namespace TraditionalBridge.Models

    public partial class Gpc3 extends DataObjectBase

        ;;make the record available and a copy
        private mSynergyData, strGpc3
        private mOriginalSynergyData, strGpc3

        private static sMetadata, @Gpc3Metadata

.region "Constructors"

        static method Gpc3
        proc
            sMetadata = new Gpc3Metadata()
            DataObjectMetadataBase.MetadataLookup.TryAdd(^typeof(Gpc3), sMetadata)
        endmethod

        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method Gpc3
            parent()
        proc
            init mSynergyData, mOriginalSynergyData
        endmethod

        ;;; <summary>
        ;;;  Alternate Constructor, accepts the structured data
        ;;; </summary>
        public method Gpc3
            required in inData, a
            required in inGrfa, a
            parent()
        proc
            mSynergyData = mOriginalSynergyData = inData
            mGlobalRFA = inGrfa
        endmethod

.endregion

.region "Attributes of this entity"

        ;;; <summary>
        ;;; GPC3.FLD_1F
        ;;; </summary>
        {Range(0,2147483647, ErrorMessage="GPC3.FLD_1F must be between 0 and 2147483647. ")}
        public property Fld1f, int
            method get
            proc
                mreturn (int)mSynergyData.fld_1f
            endmethod
            method set
            proc
                mSynergyData.fld_1f = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; GPC3.FLD_2F
        ;;; </summary>
        {Range(0,2147483647, ErrorMessage="GPC3.FLD_2F must be between 0 and 2147483647. ")}
        public property Fld2f, int
            method get
            proc
                mreturn (int)mSynergyData.fld_2f
            endmethod
            method set
            proc
                mSynergyData.fld_2f = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; GPC3.FLD_3F
        ;;; </summary>
        {Range(0,2147483647, ErrorMessage="GPC3.FLD_3F must be between 0 and 2147483647. ")}
        public property Fld3f, int
            method get
            proc
                mreturn (int)mSynergyData.fld_3f
            endmethod
            method set
            proc
                mSynergyData.fld_3f = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; GPC3.FLD_4F
        ;;; </summary>
        {Range(0,2147483647, ErrorMessage="GPC3.FLD_4F must be between 0 and 2147483647. ")}
        public property Fld4f, int
            method get
            proc
                mreturn (int)mSynergyData.fld_4f
            endmethod
            method set
            proc
                mSynergyData.fld_4f = value
            endmethod
        endproperty

.endregion

.region "Other attributes"

        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
        public override property SynergyRecord, a
            method get
            proc
                mreturn mSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Expose the complete original synergy record
        ;;; </summary>
        public override property OriginalSynergyRecord, a
            method get
            proc
                mreturn mOriginalSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Metadata describing the public field properties
        ;;; </summary>
        public override property Metadata, @DataObjectMetadataBase
            method get
            proc
                mreturn sMetadata
            endmethod
        endproperty

.endregion

.region "Public methods"

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalSynergyRecord, void
            targetMethod, @AlphaAction
        proc
            targetMethod(mSynergyData, mGlobalRFA)
        endmethod

        ;;; <summary>
        ;;; Allow the host to validate all fields. Each field will fire the validation method.
        ;;; </summary>
        public override method InitialValidateData, void
        proc
        endmethod

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalGetValues, [#]@object
        proc
            ;;TODO: This should be returning boxed values for each of our fields
            mreturn new Object[4]
        endmethod

.endregion
endclass

endnamespace
