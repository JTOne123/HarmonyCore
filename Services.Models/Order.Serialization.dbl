;;*****************************************************************************
;;
;; Title:       Order.Serialization.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure ORDERS and from the data file DAT:orders.ism.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.Text.Json
import System.Text.Json.Serialization
import Harmony.Core

namespace Services.Models

    ;;put the converter on the target type using a partial class
    {JsonConverter(^typeof(OrderConverter))}
    public partial class Order extends DataObjectBase

    endclass

    public class OrderConverter extends JsonConverter<Order>
        private static FallbackConverter, @JsonConverter<Order>
        
        static method OrderConverter
        proc
            FallbackConverter = (@JsonConverter<Order>)Activator.CreateInstance(Type.GetType("System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1").MakeGenericType(new Type[#] { ^typeof(Order) }))
        endmethod

        public override method Write, void
            writer, @Utf8JsonWriter
            objectValue, @Order
            options, @JsonSerializerOptions
        proc
            writer.WriteStartObject()
            writer.WriteNumber("OrderNumber", objectValue.OrderNumber)
            writer.WriteNumber("CustomerNumber", objectValue.CustomerNumber)
            writer.WriteString("PlacedBy", objectValue.PlacedBy)
            writer.WriteString("CustomerReference", objectValue.CustomerReference)
            writer.WriteString("PaymentTermsCode", objectValue.PaymentTermsCode)
            writer.WriteString("DateOrdered", objectValue.DateOrdered.ToString())
            writer.WriteString("DateCompleted", objectValue.DateCompleted.ToString())
			writer.WriteEndObject()
		endmethod

        public override method Read, @Order
            inout reader, Utf8JsonReader
            typeToConvert, @Type
            options, @JsonSerializerOptions 
        proc
            mreturn FallbackConverter.Read(reader, typeToConvert, options)
        endmethod
    endclass

endnamespace
