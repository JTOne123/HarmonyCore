;;*****************************************************************************
;;
;; Title:       CustomerNote.Serialization.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure CUSTOMER_NOTES and from the data file DAT:customer_notes.ism.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.Text.Json
import System.Text.Json.Serialization
import Harmony.Core

namespace Services.Models

    ;;put the converter on the target type using a partial class
    {JsonConverter(^typeof(CustomerNoteConverter))}
    public partial class CustomerNote extends DataObjectBase

    endclass

    public class CustomerNoteConverter extends JsonConverter<CustomerNote>
        private static FallbackConverter, @JsonConverter<CustomerNote>
        
        static method CustomerNoteConverter
        proc
            FallbackConverter = (@JsonConverter<CustomerNote>)Activator.CreateInstance(Type.GetType("System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1").MakeGenericType(new Type[#] { ^typeof(CustomerNote) }))
        endmethod

        public override method Write, void
            writer, @Utf8JsonWriter
            objectValue, @CustomerNote
            options, @JsonSerializerOptions
        proc
            writer.WriteStartObject()
            writer.WriteNumber("CustomerNumber", objectValue.CustomerNumber)
            writer.WriteNumber("NoteNumber", objectValue.NoteNumber)
            writer.WriteString("NoteText", objectValue.NoteText)
			writer.WriteEndObject()
		endmethod

        public override method Read, @CustomerNote
            inout reader, Utf8JsonReader
            typeToConvert, @Type
            options, @JsonSerializerOptions 
        proc
            mreturn FallbackConverter.Read(reader, typeToConvert, options)
        endmethod
    endclass

endnamespace
